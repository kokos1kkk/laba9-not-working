import sqlite3
from sqlite3 import Error


def create_connection(path):
    connection = None

    try:
        connection = sqlite3.connect(path)
        print("Connection successful")
    except Error as e:
        print(f"The error'{e}' occurred")
    return connection


connection = create_connection("D:\ytuh\db.sqlite")


def execute_query(connection, query):
    cursor = connection.cursor()
    try:
        cursor.execute(query)
        connection.commit()
        print("Query executed successfully")
    except Error as e:
        print(f"The error'{e}' occurred")


def execute_read_query(connection, query):
    cursor = connection.cursor()
    result = None
    try:
        cursor.execute(query)
        result = cursor.fetchall()
        return result
    except Error as e:
        print(f"The error '{e}' occurred")

create_games_table = """
CREATE TABLE IF NOT EXISTS games (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    title VARCHAR(100) NOT NULL UNIQUE,
    year DATE NOT NULL,
    image_url VARCHAR(255) NOT NULL
);
"""
execute_query(connection, create_games_table)



create_company_table = """
CREATE TABLE IF NOT EXISTS company(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name_of_company VARCHAR(45) NOT NULL UNIQUE
);
"""

execute_query(connection, create_company_table)


create_genres_table = """
CREATE TABLE IF NOT EXISTS genres(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(45) NOT NULL UNIQUE
);
"""

execute_query(connection, create_genres_table)


create_games_company_table = """
CREATE TABLE IF NOT EXISTS games_company(
    games_id INTEGER NOT NULL,
    company_id INTEGER NOT NULL,
    FOREIGN KEY(games_id) REFERENCES games(id)
    FOREIGN KEY(company_id) REFERENCES company(id)
);
"""

execute_query(connection, create_games_company_table)

create_games_genres_table = """
CREATE TABLE IF NOT EXISTS games_genres(
    games_id INTEGER NOT NULL,
    genres_id INTEGER NOT NULL,
    FOREIGN KEY(games_id) REFERENCES games(id),
    FOREIGN KEY(genres_id) REFERENCES genres(id)
);
"""
execute_query(connection, create_games_genres_table)


create_games = """
INSERT INTO
    games (title, year, image_url)
vALUES
    ('The Witcher 3: Wild Hunt', 2015, 'None' ),
    ('Dark Souls 2: Scholar of the first Sin', '2015, 'None');
"""
execute_query(connection, create_games)


create_company = """
INSERT INTO
    company (name_of_company)
VALUES
    ('CD Projekt RED'),
    ('FromSoftware');
"""
execute_query(connection, create_company)

create_genres = """
INSERT INTO
    genres (name)
VALUES
    ('Action/RPG'),
    ('DarkFantasy/RPG');
"""
execute_query(connection, create_genres)


select_games = "SELECT * FROM games"
games = execute_read_query(connection, select_games)
for game in games:
    print(game)


select_company = "SELECT * FROM company"
company = execute_read_query(connection, select_company)
for companies in company:
    print(company)
